#!/usr/bin/env python3

import argparse
import subprocess

parser = argparse.ArgumentParser(prog='./mustang.py', description='Parse command-line arguments as a wrapper for the MUSTANG binary.')
parser.add_argument("-t", "--threads-max", help='The maximum number of threads this program allows to simultaneously run before stalling the creation of new threads (default: %(default)s).', type=int, default=128, nargs='?', required=False, metavar='THREADS')
parser.add_argument("-p", "--paths", nargs='+', required=True, metavar='PATH')
parser.add_argument("-o, --output", required=False, type=str, nargs='+', metavar="FILE")

if __name__ == '__main__':
    args = parser.parse_args()

    # eventual invocation:
    # ./mustang-bin {args.max_threads} [paths:] /path/one /path/two ... [namespaces:] /ns1 /ns2 ... 


    base_invocation = f"./mustang-bin {args.threads_max}"

    base_invocation += " [paths:]"

    for path in args.paths:
        base_invocation += f" {path}" 

    full_invocation = ''

    if (args.namespaces):

        full_invocation = base_invocation + " [namespaces:]"

        for namespace in args.namespaces:
            full_invocation += f" {namespace}"

    # collect command-line args in a list, then subprocess.run() on that list

